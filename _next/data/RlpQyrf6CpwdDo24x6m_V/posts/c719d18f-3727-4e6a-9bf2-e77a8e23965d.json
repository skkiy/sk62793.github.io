{"pageProps":{"postData":{"id":"c719d18f-3727-4e6a-9bf2-e77a8e23965d","date":"2021-12-01","title":"GO言語による並行処理","contents":[{"object":"block","id":"a36d0b58-4b03-4603-a6e8-5fe41bc74a27","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:13:00.000Z","has_children":false,"archived":false,"type":"heading_1","heading_1":{"text":[{"type":"text","text":{"content":"1章 並行処理入門","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"1章 並行処理入門","href":null}]}},{"object":"block","id":"4bb26aa4-d94d-4441-bcc8-ba40d2c04338","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"並行処理とは：一つ以上の処理が同時に発生する処理","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"並行処理とは：一つ以上の処理が同時に発生する処理","href":null}]}},{"object":"block","id":"e32a4164-79be-4eab-b681-7d533726021b","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"クラウドコンピューティングによってコードを並行にするかという問題が生まれた\n→Webスケール：驚異的並列化可能な問題\n→ローリングアップデート、水平スケールが可能に","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"クラウドコンピューティングによってコードを並行にするかという問題が生まれた\n→Webスケール：驚異的並列化可能な問題\n→ローリングアップデート、水平スケールが可能に","href":null}]}},{"object":"block","id":"af59ab80-2235-4a3c-a3fb-bfa3b769242f","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"heading_2","heading_2":{"text":[{"type":"text","text":{"content":"並行処理の難しさ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"並行処理の難しさ","href":null}]}},{"object":"block","id":"ba2e7dbc-8869-4fdb-8908-6b8f1ae15d83","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"heading_3","heading_3":{"text":[{"type":"text","text":{"content":"競合状態","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"競合状態","href":null}]}},{"object":"block","id":"a041cd1f-8d6a-4aa0-b212-cd3668ea9ec3","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"データ競合：同じ変数に読み込みと書き込みが同時に起こる","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"データ競合：同じ変数に読み込みと書き込みが同時に起こる","href":null}]}},{"object":"block","id":"967d0f03-e3a9-48f1-8134-0c510b40f838","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"heading_3","heading_3":{"text":[{"type":"text","text":{"content":"アトミック性","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"アトミック性","href":null}]}},{"object":"block","id":"97de90b4-6885-45cc-934b-7a5666304407","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"アトミック性：それが操作されている特定のコンテキスト（スコープ、操作がアトミックであると考えられる範囲）の中では分割不能、或いは中断不可であること","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"アトミック性：それが操作されている特定のコンテキスト（スコープ、操作がアトミックであると考えられる範囲）の中では分割不能、或いは中断不可であること","href":null}]}},{"object":"block","id":"b1e5d381-2a70-4acb-adb5-67cb1de4cc3f","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"分割不能、中断不可：コンテキストの中で、何かアトミックな処理が起きた場合には、そのコンテキスト全体で処理をしていて、その他の何かが同時には起きていない","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"分割不能、中断不可：コンテキストの中で、何かアトミックな処理が起きた場合には、そのコンテキスト全体で処理をしていて、その他の何かが同時には起きていない","href":null}]}},{"object":"block","id":"b8815288-8826-4877-9311-ad743bf395a8","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"heading_3","heading_3":{"text":[{"type":"text","text":{"content":"メモリアクセス同期","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"メモリアクセス同期","href":null}]}},{"object":"block","id":"f9d19ae9-c090-4d7f-9675-e787ab962c3d","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"クリティカルセクション：プログラム内で共有リソースに対する排他的なアクセスが必要な場所","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"クリティカルセクション：プログラム内で共有リソースに対する排他的なアクセスが必要な場所","href":null}]}},{"object":"block","id":"fe64693d-ca8f-429f-a2d9-986737c4cc82","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"メモリへの同期的アクセスによって解決できるわけではない","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"メモリへの同期的アクセスによって解決できるわけではない","href":null}]}},{"object":"block","id":"b5fcda21-fb06-412e-9933-ac173365e7d7","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"heading_3","heading_3":{"text":[{"type":"text","text":{"content":"デッドロック","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"デッドロック","href":null}]}},{"object":"block","id":"1a9d9aa0-16d8-4e93-8c2c-6c50612ed389","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"全ての並行なプロセスがお互いの処理を待ち合っている状況","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"全ての並行なプロセスがお互いの処理を待ち合っている状況","href":null}]}},{"object":"block","id":"06e5b748-5be5-4e8e-9218-5f916b09aaae","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"検知するためのissue(https://github.com/golang/go/issues/13759)","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"検知するためのissue(https://github.com/golang/go/issues/13759)","href":null}]}},{"object":"block","id":"be1e4d65-3a6c-42b3-965e-a0af469efbc5","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"Coffman条件\n相互排他：ある並行プロセスがリソースに対して排他的な権利をどの時点においても保持している。\n条件待ち：ある並行プロセスはリソースの保持と追加のリソース待ちを同時に行わなければならない。\n横取り不可：ある並行プロセスによって保持されているリソースは、ソロプロセスによって飲み解放される。\n循環待ち：ある並行プロセス（P1）は、他の連なっている並行プロセス（P2）を待たなければならない。そしてP2はP1を待っている。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Coffman条件\n相互排他：ある並行プロセスがリソースに対して排他的な権利をどの時点においても保持している。\n条件待ち：ある並行プロセスはリソースの保持と追加のリソース待ちを同時に行わなければならない。\n横取り不可：ある並行プロセスによって保持されているリソースは、ソロプロセスによって飲み解放される。\n循環待ち：ある並行プロセス（P1）は、他の連なっている並行プロセス（P2）を待たなければならない。そしてP2はP1を待っている。","href":null}]}},{"object":"block","id":"d5fd09ab-7e96-4b2f-a7a5-c338a19014b3","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"heading_3","heading_3":{"text":[{"type":"text","text":{"content":"ライブロック","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ライブロック","href":null}]}},{"object":"block","id":"0b2e903c-a91a-485d-a95d-0b72a72ee7a7","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"並行操作を行なっているけど、その操作はプログラムの状態を全く進めていないプログラム\n廊下で人同士（複数のgoroutine）がお互いに道を譲ろうとして（デッドロックを予防して）いる状態","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"並行操作を行なっているけど、その操作はプログラムの状態を全く進めていないプログラム\n廊下で人同士（複数のgoroutine）がお互いに道を譲ろうとして（デッドロックを予防して）いる状態","href":null}]}},{"object":"block","id":"eabcd030-6829-46a9-b27a-6bd0619b0245","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"heading_3","heading_3":{"text":[{"type":"text","text":{"content":"リソース枯渇","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"リソース枯渇","href":null}]}},{"object":"block","id":"1f55a078-bcca-46a4-a464-f89c183b1587","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"並行プロセスが仕事をするのに必要なリソースを取得できない状況\nあるゴルーチンが不必要にクリティカルセクションを超えて共有ロックを広げ、他のゴルーチンが効率的に仕事をできない状態\n検知するにはログを出力して、仕事の速度が期待通りになっているかを測定する","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"並行プロセスが仕事をするのに必要なリソースを取得できない状況\nあるゴルーチンが不必要にクリティカルセクションを超えて共有ロックを広げ、他のゴルーチンが効率的に仕事をできない状態\n検知するにはログを出力して、仕事の速度が期待通りになっているかを測定する","href":null}]}},{"object":"block","id":"7c1da142-5379-407a-89f8-3110ddf5fae8","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"heading_3","heading_3":{"text":[{"type":"text","text":{"content":"安全性","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"安全性","href":null}]}},{"object":"block","id":"527ee2b3-5979-4db6-b877-c5ca165022e1","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[{"type":"text","text":{"content":"並行処理が関わる問題空間で関数、メソッド、変数を公開する場合は、以下の3点に触れる。\n・誰が並行処理を担っているか。\n・問題空間がどのように並行処理のプリミティブに対応しているか。\n・誰が同期処理を担っているか。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"並行処理が関わる問題空間で関数、メソッド、変数を公開する場合は、以下の3点に触れる。\n・誰が並行処理を担っているか。\n・問題空間がどのように並行処理のプリミティブに対応しているか。\n・誰が同期処理を担っているか。","href":null}]}},{"object":"block","id":"fe4f52f5-3898-42f5-985f-cb2c6dd324ee","created_time":"2021-12-01T18:12:00.000Z","last_edited_time":"2021-12-01T18:12:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[]}},{"object":"block","id":"8dc64801-ec51-4334-8466-b7d0d2d6b4e1","created_time":"2021-12-01T16:19:00.000Z","last_edited_time":"2021-12-01T16:19:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[]}},{"object":"block","id":"c7e17273-7424-49af-bca8-a939e8db5b23","created_time":"2021-12-01T15:47:00.000Z","last_edited_time":"2021-12-01T15:47:00.000Z","has_children":false,"archived":false,"type":"paragraph","paragraph":{"text":[]}}]}},"__N_SSG":true}